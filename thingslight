import os
import wifi
import socketpool
import time
import board
import digitalio
import adafruit_requests
import ssl
import microcontroller
import neopixel

# Get wifi and thingspeak read API details from a settings.toml file
ssid = os.getenv("CIRCUITPY_WIFI_SSID")
password = os.getenv("CIRCUITPY_WIFI_PASSWORD")
tsreadAPI = os.getenv("thingspeak_read_api_key")

# Thingspeak API url.
API_URL = "https://api.thingspeak.com"

# Connect to Wi-Fi AP
print(f"Initializing...")
wifi.radio.connect(ssid, password)
print("connected!\n")
pool = socketpool.SocketPool(wifi.radio)
print("IP Address: {}".format(wifi.radio.ipv4_address))
print("Connecting to WiFi '{}' ... ".format(ssid), end="")
requests = adafruit_requests.Session(pool, ssl.create_default_context())

# Define the number of NeoPixels
num_pixels = 1

# On some boards, the NeoPixel is already defined, for example, on Adafruit ESP32 S2 Feather, it's usually 'board.NEOPIXEL'
pixel_pin = board.NEOPIXEL

# Create a NeoPixel object
pixels = neopixel.NeoPixel(pixel_pin, num_pixels, brightness=1.0, auto_write=False)

# Soil moisture thresholds for color coding
red_threshold = 4
orange_threshold = 2.99
green_threshold = 2

def set_neopixel_color(moisture_value):
    if moisture_value < red_threshold:
        pixels[0] = (255, 255, 255)  # Red
    elif moisture_value < orange_threshold:
        pixels[0] = (255, 165, 0)  # Orange
    else:
        pixels[0] = (0, 255, 0)  # Green

    pixels.show()  # Update the NeoPixel

while True:
    try:
        while not wifi.radio.ipv4_address or "0.0.0.0" in repr(wifi.radio.ipv4_address):
            print(f"Reconnecting to WiFi...")
            wifi.radio.connect(ssid, password)

        # Reading single value from Thingspeak
        print("\nReading from Thingspeak...")
        get_url = API_URL + f"/channels/2316159/fields/1.json?api_key={tsreadAPI}&results=1"
        r = requests.get(get_url)
        data = r.json()
        value = data['feeds'][0]['field1']
        print("Soil moisture:", value)

        # Reading single value from Thingspeak
        get_url = API_URL + f"/channels/2316159/fields/2.json?api_key={tsreadAPI}&results=1"
        r = requests.get(get_url)
        data = r.json()
        value = data['feeds'][0]['field2']
        print("Temperature:", value)

        # Reading soil moisture value from Thingspeak
        get_url = API_URL + f"/channels/2316159/fields/1.json?api_key={tsreadAPI}&results=1"
        r = requests.get(get_url)
        data = r.json()
        soil_moisture_value = float(data['feeds'][0]['field1'])
        print("Soil Moisture:", soil_moisture_value)

        # Set NeoPixel color based on soil moisture level
        set_neopixel_color(soil_moisture_value)


        time.sleep(20)  # Adjust the delay as needed.



    except OSError as e:
        print("Failed!\n", e)
        microcontroller.reset()
